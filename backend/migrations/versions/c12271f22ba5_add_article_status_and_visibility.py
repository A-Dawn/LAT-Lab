"""add_article_status_and_visibility

Revision ID: c12271f22ba5
Revises: 5a7b3e9c4d2f
Create Date: 2025-06-27 16:47:03.556211

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite


# revision identifiers, used by Alembic.
revision: str = 'c12271f22ba5'
down_revision: Union[str, None] = '5a7b3e9c4d2f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 使用SQLite批处理方式添加列
    with op.batch_alter_table('articles') as batch_op:
        batch_op.add_column(sa.Column('status', sa.String(length=9), server_default='published', nullable=False))
        batch_op.add_column(sa.Column('published_at', sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column('visibility', sa.String(length=10), server_default='public', nullable=False))
        batch_op.add_column(sa.Column('password', sa.String(length=100), nullable=True))
    
    # 移除is_verified列的NOT NULL约束会导致SQLite问题，跳过这一步
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 使用批处理方式删除列
    with op.batch_alter_table('articles') as batch_op:
        batch_op.drop_column('password')
        batch_op.drop_column('visibility')
        batch_op.drop_column('published_at')
        batch_op.drop_column('status')
    # ### end Alembic commands ###
